/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface ButtonZeplin {
    'disabled': boolean;
    'iconAfter': string;
    'iconBefore': string;
  }
  interface PpTextfield {
    /**
    * Ejemplo de prop
    */
    'value': string;
  }
}

declare global {


  interface HTMLButtonZeplinElement extends Components.ButtonZeplin, HTMLStencilElement {}
  var HTMLButtonZeplinElement: {
    prototype: HTMLButtonZeplinElement;
    new (): HTMLButtonZeplinElement;
  };

  interface HTMLPpTextfieldElement extends Components.PpTextfield, HTMLStencilElement {}
  var HTMLPpTextfieldElement: {
    prototype: HTMLPpTextfieldElement;
    new (): HTMLPpTextfieldElement;
  };
  interface HTMLElementTagNameMap {
    'button-zeplin': HTMLButtonZeplinElement;
    'pp-textfield': HTMLPpTextfieldElement;
  }
}

declare namespace LocalJSX {
  interface ButtonZeplin {
    'disabled'?: boolean;
    'iconAfter'?: string;
    'iconBefore'?: string;
  }
  interface PpTextfield {
    /**
    * Para levantar los eventos hacia arriba
    */
    'onEventChange'?: (event: CustomEvent<any>) => void;
    /**
    * Ejemplo de prop
    */
    'value'?: string;
  }

  interface IntrinsicElements {
    'button-zeplin': ButtonZeplin;
    'pp-textfield': PpTextfield;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'button-zeplin': LocalJSX.ButtonZeplin & JSXBase.HTMLAttributes<HTMLButtonZeplinElement>;
      'pp-textfield': LocalJSX.PpTextfield & JSXBase.HTMLAttributes<HTMLPpTextfieldElement>;
    }
  }
}


